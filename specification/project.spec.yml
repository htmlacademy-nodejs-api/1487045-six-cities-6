openapi: 3.0.3
info:
  title: API сервер для проекта «Шесть городов».
  description: |-
    * Список ресурсов и маршрутов сервера «Шесть городов».
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  version: 2.0.0

tags:
  - name: offers
    description: Действия с предложениями.
  - name: comments
    description: Действия с комментариями.
  - name: users
    description: Действия с пользователем.

paths:
  /user/register:
    post:
      tags:
        - users
      summary: Регистрация пользователя
      description: Регистрирует нового пользователя.

      requestBody:
        description: Информация для создания нового пользователя.
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createUser"
        required: true

      responses:
        "201":
          description: Пользователь зарегистрирован. Объект пользователя.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "409":
          description: Пользователь с таким email уже существует.

        "400":
          description: Ошибка валидации данных

  /user/login:
    post:
      tags:
        - users
      summary: Авторизация пользователя
      description: Авторизует пользователя на основе логина и пароля

      requestBody:
        description: Информация об авторизации пользователя
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/loginUser"
        required: true

      responses:
        "200":
          description: Пользователь авторизован. Объект пользователя
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "400":
          description: Ошибка валидации данных

        "401":
          description: Неправильные данные для авторизации

    get:
      tags:
        - users
      summary: Проверка состояния пользователя
      description: Возвращает информацию по авторизованному пользователю

      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTWlrZSBMZWUiLCJlbWFpbCI6Im1pa2VAZ21haWwuY29tIn0.6fUkw6w8yh9MtPfBoRV_R1GQgsLTUnYZBeYhW_xHteY

      responses:
        "200":
          description: Пользователь авторизован. Токен валидный.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/user"

        "401":
          description: Пользователь не авторизован. Токен не валидный.

  /user/logout:
    post:
      tags:
        - users
      summary: Завершение сессии пользователя

      parameters:
        - name: token
          in: header
          required: true
          schema:
            type: string
            example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJuYW1lIjoiTWlrZSBMZWUiLCJlbWFpbCI6Im1pa2VAZ21haWwuY29tIn0.6fUkw6w8yh9MtPfBoRV_R1GQgsLTUnYZBeYhW_xHteY

      responses:
        "204":
          description: Сессия завершена

        "401":
          description: Данный пользователь не авторизован

  /offers:
    post:
      tags:
        - offers
      summary: Создание нового предложения

      requestBody:
        description: Информация для создания нового предложения
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOffer"
        required: true

      responses:
        "201":
          description: Новое предложение создано. Объект предложения.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"

        "400":
          description: Ошибка валидации данных

        "401":
          description: Пользователь не авторизован.

    get:
      tags:
        - offers
      summary: Получение списка предложений по аренде.

      parameters:
        - name: amount
          in: query
          description: Количество предложений в списке. По умолчанию 60.
          schema:
            type: number
            default: 60
            example: 100

      responses:
        "200":
          description: Список предложения получен.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/offerPreview"

  /offers/{offerId}:
    get:
      tags:
        - offers
      summary: Получение детальной информации о предложении.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 11

      responses:
        "200":
          description: Получена детальная информация о предложении
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"

        "404":
          description: Предложение не найдено

    patch:
      tags:
        - offers
      summary: Редактирование предложения.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 11

      requestBody:
        description: Информация для редактирования предложения
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/createOffer"
        required: true

      responses:
        "200":
          description: Предложение успешно отредактировано.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/offer"

        "400":
          description: Ошибка валидации данных.

        "404":
          description: Предложение не найдено.

        "401":
          description: Пользователь не авторизован.

        "403":
          description: Нет доступа. Редактирование запрещено.

    delete:
      tags:
        - offers
      summary: Удаление предложения.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 11

      responses:
        "204":
          description: Предложение успешно удалено.

        "404":
          description: Предложение не найдено.

        "401":
          description: Пользователь не авторизован.

        "403":
          description: Нет доступа. Удаление запрещено.


  /offers/premium:
    get:
      tags:
        - offers
      summary: Получение списка премиальных предложений для города.

      parameters:
        - name: city
          in: query
          description: Идентификатор города
          required: true
          schema:
            type: string
            example: 1

      responses:
        "200":
          description: Список премиальных предложений получен.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/offer"


  /offers/favorites:
    get:
      tags:
        - offers
      summary: Получения списка предложений, добавленных в избранное.

      responses:
        "200":
          description: Список избранных предложений получен.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/offer"

        "401":
          description: Пользователь не авторизован.


  /offers/{offerId}/comments:
    get:
      tags:
        - comments
      summary: Получение списка комментариев для предложения.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 11

      responses:
        "200":
          description: Список комментариев получен.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/comment"

  /comments:
    post:
      tags:
        - comments
      summary: Добавление комментария для предложения.

      parameters:
        - name: offerId
          in: path
          description: Идентификатор предложения
          required: true
          schema:
            type: string
            example: 11

      requestBody:
        description: Информация для создания комментария
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/commentCreate"
        required: true

      responses:
        "200":
          description: Комментарий создан. Объект комментария.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/comment"

        "400":
          description: Ошибка валидации данных.

        "401":
          description: Пользователь не авторизован.

components:
  schemas:
    createUser:
      type: object
      properties:
        name:
          type: string
          example: Mike

        email:
          type: string
          example: mike@gmail.com

        avatar:
          type: string
          example: user-avatar.jpg

        type:
          type: string
          enum:
            - Normal
            - Pro
          example: Pro

        password:
          type: string
          example: 1234pass

      required:
        - name
        - email
        - type
        - password

    user:
      type: object
      properties:
        id:
          type: string
          example: "1"

        name:
          type: string
          example: Mike

        email:
          type: string
          example: mike@gmail.com

        avatar:
          type: string
          example: user-avatar.jpg

        type:
          type: string
          enum:
            - Normal
            - Pro
          example: Pro

    loginUser:
      type: object
      properties:
        email:
          type: string
          example: mike@gmail.com

        password:
          type: string
          example: 1234pass

      required:
        - email
        - password

    createOffer:
      type: object
      properties:
        title:
          type: string
          example: Forest Hills Hotel

        description:
          type: string
          example: "Cozy mountain hotel with views of picturesque mountains. The hotel has a local cuisine restaurant, spa and swimming pool."

        city:
          type: string
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf
          example: Paris

        previewImage:
          type: string
          example: http://images.com/hotel/1/preview.jpg

        images:
          type: array
          example:
            [
              "http://images.com/hotel/1/1.jpg",
              "http://images.com/hotel/1/2.jpg",
              "http://images.com/hotel/1/3.jpg",
            ]

        isPremium:
          type: boolean
          example: false

        isFavorite:
          type: boolean
          example: false

        type:
          type: string
          enum:
            - Apartment
            - House
            - Room
            - Hotel
          example: Apartment

        bedrooms:
          type: number
          example: 3

        guests:
          type: number
          example: 5

        price:
          type: number
          example: 1000

        amenities:
          type: array
          items:
            type: string
          example: ["Breakfast", "Air conditioning"] #TODO Добавить тут enum

        author:
          type: object
          $ref: "#/components/schemas/user"

        location:
          type: object
          $ref: "#/components/schemas/location"

      required:
        - title
        - description
        - city
        - previewImage
        - images
        - isPremium
        - type
        - bedrooms
        - guests
        - price
        - amenities
        - author
        - location

    offer:
      type: object
      properties:
        id:
          type: string
          example: 10

        title:
          type: string
          example: Forest Hills Hotel

        description:
          type: string
          example: "Cozy mountain hotel with views of picturesque mountains. The hotel has a local cuisine restaurant, spa and swimming pool."

        publishDate:
          type: string
          example: 2024-01-12T12:26:04.232Z

        city:
          type: string
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf
          example: Paris

        previewImage:
          type: string
          example: http://images.com/hotel/1/preview.jpg

        images:
          type: array
          example:
            [
              "http://images.com/hotel/1/1.jpg",
              "http://images.com/hotel/1/2.jpg",
              "http://images.com/hotel/1/3.jpg",
            ]

        isPremium:
          type: boolean
          example: false

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.6

        type:
          type: string
          enum:
            - Apartment
            - House
            - Room
            - Hotel
          example: Apartment

        bedrooms:
          type: number
          example: 3

        guests:
          type: number
          example: 5

        price:
          type: number
          example: 1000

        amenities:
          type: array
          items:
            type: string
          example: ["Breakfast", "Air conditioning"] #TODO Добавить тут enum

        author:
          type: object
          $ref: "#/components/schemas/user"

        commentsAmount:
          type: number
          example: 42

        location:
          type: object
          $ref: "#/components/schemas/location"

    offerPreview:
      type: object
      properties:
        id:
          type: string
          example: 10

        title:
          type: string
          example: Forest Hills Hotel

        publishDate:
          type: string
          example: 2024-01-12T12:26:04.232Z

        city:
          type: string
          enum:
            - Paris
            - Cologne
            - Brussels
            - Amsterdam
            - Hamburg
            - Dusseldorf
          example: Paris

        previewImage:
          type: string
          example: http://images.com/hotel/1/preview.jpg

        isPremium:
          type: boolean
          example: false

        isFavorite:
          type: boolean
          example: false

        rating:
          type: number
          example: 4.6

        type:
          type: string
          enum:
            - Apartment
            - House
            - Room
            - Hotel
          example: Apartment

        price:
          type: number
          example: 1000

        commentsAmount:
          type: number
          example: 42

    location:
      type: object
      properties:
        latitude:
          type: number
          example: 48.85661

        longitude:
          type: number
          example: 2.351499

    commentCreate:
      type: object
      properties:
        text:
          type: string
          example: "Cozy mountain hotel with views of picturesque mountains!"

        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 3.5

        author:
          $ref: "#/components/schemas/user"

    comment:
      type: object
      properties:
        id:
          type: string
          example: "3"

        text:
          type: string
          example: "Cozy mountain hotel with views of picturesque mountains!"

        publishDate:
          type: string
          example: 2024-01-12T12:26:04.232Z

        rating:
          type: number
          minimum: 1
          maximum: 5
          example: 3.5

        author:
          $ref: "#/components/schemas/user"
